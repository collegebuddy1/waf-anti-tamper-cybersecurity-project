/*----------------------------------------------------------------------
 * This file is generated by mk_parser.py.
 *----------------------------------------------------------------------*/
#ifndef __CPARSER_TREE_H__
#define __CPARSER_TREE_H__

#ifdef __cplusplus
extern "C" {
#endif /* __cplusplus */

extern cparser_node_t cparser_root;

cparser_result_t cparser_cmd_enable(cparser_context_t *context);
cparser_result_t cparser_cmd_st_write(cparser_context_t *context);
cparser_result_t cparser_cmd_st_load(cparser_context_t *context);
cparser_result_t cparser_cmd_st_configure(cparser_context_t *context);
cparser_result_t cparser_cmd_monther_no_tamper_name(cparser_context_t *context,
    char **name_ptr);
cparser_result_t cparser_cmd_monther_tamper_name(cparser_context_t *context,
    char **name_ptr);
cparser_result_t cparser_cmd_son_description_content(cparser_context_t *context,
    char **content_ptr);
cparser_result_t cparser_cmd_son_no_description(cparser_context_t *context);
cparser_result_t cparser_cmd_son_no_email(cparser_context_t *context);
cparser_result_t cparser_cmd_son_no_connect(cparser_context_t *context);
cparser_result_t cparser_cmd_son_no_document_root(cparser_context_t *context);
cparser_result_t cparser_cmd_son_no_monitor_folder_depth(cparser_context_t *context);
cparser_result_t cparser_cmd_son_no_monitor_folder_root_folder(cparser_context_t *context);
cparser_result_t cparser_cmd_son_no_monitor_folder_other_folder(cparser_context_t *context);
cparser_result_t cparser_cmd_son_no_monitor_file_size(cparser_context_t *context);
cparser_result_t cparser_cmd_son_no_monitor_file_type_exclude_extension(cparser_context_t *context,
    char **extension_ptr);
cparser_result_t cparser_cmd_son_no_restore_mode(cparser_context_t *context);
cparser_result_t cparser_cmd_son_no_monitor(cparser_context_t *context);
cparser_result_t cparser_cmd_son_no_disk_size(cparser_context_t *context);
cparser_result_t cparser_cmd_son_email_address(cparser_context_t *context,
    char **address_ptr);
cparser_result_t cparser_cmd_son_connect_protocol_protocol_object_var_port_number_username_name_password_cipher_text_pw(cparser_context_t *context,
    char **protocol_ptr,
    char **object_ptr,
    char **var_ptr,
    uint32_t *number_ptr,
    char **name_ptr,
    char **pw_ptr);
cparser_result_t cparser_cmd_son_connect_protocol_protocol_object_var_port_number_username_name_password_pw(cparser_context_t *context,
    char **protocol_ptr,
    char **object_ptr,
    char **var_ptr,
    uint32_t *number_ptr,
    char **name_ptr,
    char **pw_ptr);
cparser_result_t cparser_cmd_son_document_root_path(cparser_context_t *context,
    char **path_ptr);
cparser_result_t cparser_cmd_son_monitor_folder_depth_level(cparser_context_t *context,
    int32_t *level_ptr);
cparser_result_t cparser_cmd_son_monitor_folder_root_folder_seconds(cparser_context_t *context,
    int32_t *seconds_ptr);
cparser_result_t cparser_cmd_son_monitor_folder_other_folder_seconds(cparser_context_t *context,
    int32_t *seconds_ptr);
cparser_result_t cparser_cmd_son_monitor_file_size_number(cparser_context_t *context,
    uint32_t *number_ptr);
cparser_result_t cparser_cmd_son_monitor_file_type_exclude_extension(cparser_context_t *context,
    char **extension_ptr);
cparser_result_t cparser_cmd_son_restore_mode_option(cparser_context_t *context,
    char **option_ptr);
cparser_result_t cparser_cmd_son_monitor_option(cparser_context_t *context,
    char **option_ptr);
cparser_result_t cparser_cmd_son_disk_size_size(cparser_context_t *context,
    int32_t *size_ptr);
cparser_result_t cparser_cmd_son_restore_tamper_all(cparser_context_t *context);
cparser_result_t cparser_cmd_son_restore_tamper_file_name(cparser_context_t *context,
    char **name_ptr);
cparser_result_t cparser_cmd_son_view_file_content_name(cparser_context_t *context,
    char **name_ptr);
cparser_result_t cparser_cmd_son_view_tamper_content_name(cparser_context_t *context,
    char **name_ptr);
cparser_result_t cparser_cmd_son_view_tamper_filename(cparser_context_t *context);
cparser_result_t cparser_cmd_son_clear_tamper_all(cparser_context_t *context);
cparser_result_t cparser_cmd_son_clear_tamper_file_name(cparser_context_t *context,
    char **name_ptr);

#ifdef __cplusplus
}
#endif /* __cplusplus */

#endif /* __CPARSER_TREE_H__ */
